{"version":3,"file":"angular-bem.umd.js.map","sources":["ng://angular-bem/bem.ts"],"sourcesContent":["import { NgModule, Directive, Attribute, Renderer2, Input, ElementRef } from '@angular/core';\n\nexport class BemConfig {\n  separators?: Array<string>;\n  ignoreValues?: boolean;\n  modCase?: string;\n}\n\nconst separators = {\n  el: '__',\n  mod: '--',\n  val: '-'\n};\nlet ignoreValues = false;\nlet modCase = 'kebab';\n\nfunction modNameHandler(str: string): string {\n  switch (modCase) {\n    case 'kebab':\n      return str ? str.replace(/[A-Z]/g, function(s) {return '-' + s.toLowerCase(); }).replace(/$\\-/, '') : '';\n    case 'snake':\n      return str ? str.replace(/[A-Z]/g, function(s) {return '_' + s.toLowerCase(); }).replace(/$\\-/, '') : '';\n    default:\n      return str;\n  }\n}\n\nfunction generateClass(blockName: string, elemName?: string, modName?: string, modValue?: boolean | string) {\n  if (ignoreValues) {\n    modValue = !!modValue;\n  }\n\n  if (typeof modValue !== 'string' && typeof modValue !== 'boolean') {\n    modValue = !!modValue;\n  }\n\n  let cls = blockName;\n\n  if (elemName) {\n    cls += separators.el + elemName;\n  }\n\n  if (modName) {\n    modName = modNameHandler(modName);\n    cls += separators.mod + modName;\n    if (typeof(modValue) !== 'boolean' && modValue != null) {\n      cls += separators.val + modValue;\n    }\n  }\n\n  return cls;\n}\n\nfunction parseMods(mods: string | string[] | object) {\n  if (typeof mods === 'string') {\n    mods = mods.split(/\\s+/);\n  }\n\n  if (Array.isArray(mods)) {\n    let arr = mods;\n\n    mods = {};\n\n    arr.forEach(key => {\n      mods[key] = true;\n    });\n  } else if (typeof mods !== 'object') {\n    return {};\n  }\n\n  return mods;\n}\n\nfunction setMods(blockName: string, elemName: string, mods: object, oldMods: object, element: ElementRef, renderer: Renderer2) {\n  Object.keys(mods).forEach(key => {\n    if (oldMods[key]) {\n      if (mods[key] === oldMods[key]) {\n        return;\n      }\n\n      renderer.removeClass(element.nativeElement, generateClass(blockName, elemName, key, oldMods[key]));\n    }\n\n    if (mods[key]) {\n      renderer.addClass(element.nativeElement, generateClass(blockName, elemName, key, mods[key]));\n    }\n  });\n\n  Object.keys(oldMods).forEach(key => {\n    if (!(key in mods) && oldMods[key]) {\n      renderer.removeClass(element.nativeElement, generateClass(blockName, elemName, key, oldMods[key]));\n    }\n  });\n}\n\n@Directive({\n  selector: '[block]',\n})\nexport class BlockDirective {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public name: string;\n  @Input() public mod: string | string[] | object;\n  private _mods: Object;\n  private _modSerialized: string;\n\n  constructor(element: ElementRef,\n              renderer: Renderer2,\n              @Attribute('block') name: string) {\n\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(element.nativeElement, generateClass(name));\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.mod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.mod);\n\n      let mods = this.mod;\n\n      let {renderer, element, name} = this;\n\n      mods = parseMods(mods);\n\n      setMods(name, '', mods, this._mods || {}, element, renderer);\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n@Directive({\n  selector: '[elem]',\n})\nexport class ElemDirective {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public blockName: string;\n  public name: string;\n  @Input() public mod: string | string[] | object;\n  private _mods: Object;\n  private _modSerialized: string;\n\n  constructor(element: ElementRef,\n              renderer: Renderer2,\n              @Attribute('elem') name: string,\n              block: BlockDirective) {\n\n    this.blockName = block.name;\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(element.nativeElement, generateClass(block.name, name));\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.mod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.mod);\n\n      let mods = this.mod;\n\n      let {renderer, element, blockName, name} = this;\n\n      mods = parseMods(mods);\n\n      setMods(blockName, name, mods, this._mods || {}, element, renderer);\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n@Directive({\n  selector: '[mod]',\n})\nexport class ModDirective {}\n\n@NgModule({\n  declarations: [\n    BlockDirective,\n    ElemDirective,\n    ModDirective,\n  ],\n  exports: [\n    BlockDirective,\n    ElemDirective,\n    ModDirective,\n  ]\n})\nexport class BemModule {\n  static config(data: BemConfig) {\n    if (!data) {\n      return BemModule;\n    }\n\n    if (data.separators) {\n      separators.el = data.separators[0] || '__';\n      separators.mod = data.separators[1] || '--';\n      separators.val = data.separators[2] || '-';\n    }\n\n    if ('ignoreValues' in data) {\n      ignoreValues = !!data.ignoreValues;\n    }\n\n    if (data.modCase) {\n      if (!~['kebab', 'camel', 'snake'].indexOf(data.modCase)) {\n        throw 'Wrong mod case. You can use only these cases: kebab, snake, camel';\n      }\n\n      modCase = data.modCase;\n    }\n\n    return BemModule;\n  }\n}\n"],"names":["Directive","ElementRef","Renderer2","Attribute","Input","NgModule"],"mappings":"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"}

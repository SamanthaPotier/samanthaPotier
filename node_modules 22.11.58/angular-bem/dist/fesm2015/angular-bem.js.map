{"version":3,"file":"angular-bem.js.map","sources":["ng://angular-bem/bem.ts"],"sourcesContent":["import { NgModule, Directive, Attribute, Renderer2, Input, ElementRef } from '@angular/core';\n\nexport class BemConfig {\n  separators?: Array<string>;\n  ignoreValues?: boolean;\n  modCase?: string;\n}\n\nconst separators = {\n  el: '__',\n  mod: '--',\n  val: '-'\n};\nlet ignoreValues = false;\nlet modCase = 'kebab';\n\nfunction modNameHandler(str: string): string {\n  switch (modCase) {\n    case 'kebab':\n      return str ? str.replace(/[A-Z]/g, function(s) {return '-' + s.toLowerCase(); }).replace(/$\\-/, '') : '';\n    case 'snake':\n      return str ? str.replace(/[A-Z]/g, function(s) {return '_' + s.toLowerCase(); }).replace(/$\\-/, '') : '';\n    default:\n      return str;\n  }\n}\n\nfunction generateClass(blockName: string, elemName?: string, modName?: string, modValue?: boolean | string) {\n  if (ignoreValues) {\n    modValue = !!modValue;\n  }\n\n  if (typeof modValue !== 'string' && typeof modValue !== 'boolean') {\n    modValue = !!modValue;\n  }\n\n  let cls = blockName;\n\n  if (elemName) {\n    cls += separators.el + elemName;\n  }\n\n  if (modName) {\n    modName = modNameHandler(modName);\n    cls += separators.mod + modName;\n    if (typeof(modValue) !== 'boolean' && modValue != null) {\n      cls += separators.val + modValue;\n    }\n  }\n\n  return cls;\n}\n\nfunction parseMods(mods: string | string[] | object) {\n  if (typeof mods === 'string') {\n    mods = mods.split(/\\s+/);\n  }\n\n  if (Array.isArray(mods)) {\n    let arr = mods;\n\n    mods = {};\n\n    arr.forEach(key => {\n      mods[key] = true;\n    });\n  } else if (typeof mods !== 'object') {\n    return {};\n  }\n\n  return mods;\n}\n\nfunction setMods(blockName: string, elemName: string, mods: object, oldMods: object, element: ElementRef, renderer: Renderer2) {\n  Object.keys(mods).forEach(key => {\n    if (oldMods[key]) {\n      if (mods[key] === oldMods[key]) {\n        return;\n      }\n\n      renderer.removeClass(element.nativeElement, generateClass(blockName, elemName, key, oldMods[key]));\n    }\n\n    if (mods[key]) {\n      renderer.addClass(element.nativeElement, generateClass(blockName, elemName, key, mods[key]));\n    }\n  });\n\n  Object.keys(oldMods).forEach(key => {\n    if (!(key in mods) && oldMods[key]) {\n      renderer.removeClass(element.nativeElement, generateClass(blockName, elemName, key, oldMods[key]));\n    }\n  });\n}\n\n@Directive({\n  selector: '[block]',\n})\nexport class BlockDirective {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public name: string;\n  @Input() public mod: string | string[] | object;\n  private _mods: Object;\n  private _modSerialized: string;\n\n  constructor(element: ElementRef,\n              renderer: Renderer2,\n              @Attribute('block') name: string) {\n\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(element.nativeElement, generateClass(name));\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.mod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.mod);\n\n      let mods = this.mod;\n\n      let {renderer, element, name} = this;\n\n      mods = parseMods(mods);\n\n      setMods(name, '', mods, this._mods || {}, element, renderer);\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n@Directive({\n  selector: '[elem]',\n})\nexport class ElemDirective {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public blockName: string;\n  public name: string;\n  @Input() public mod: string | string[] | object;\n  private _mods: Object;\n  private _modSerialized: string;\n\n  constructor(element: ElementRef,\n              renderer: Renderer2,\n              @Attribute('elem') name: string,\n              block: BlockDirective) {\n\n    this.blockName = block.name;\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(element.nativeElement, generateClass(block.name, name));\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.mod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.mod);\n\n      let mods = this.mod;\n\n      let {renderer, element, blockName, name} = this;\n\n      mods = parseMods(mods);\n\n      setMods(blockName, name, mods, this._mods || {}, element, renderer);\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n@Directive({\n  selector: '[mod]',\n})\nexport class ModDirective {}\n\n@NgModule({\n  declarations: [\n    BlockDirective,\n    ElemDirective,\n    ModDirective,\n  ],\n  exports: [\n    BlockDirective,\n    ElemDirective,\n    ModDirective,\n  ]\n})\nexport class BemModule {\n  static config(data: BemConfig) {\n    if (!data) {\n      return BemModule;\n    }\n\n    if (data.separators) {\n      separators.el = data.separators[0] || '__';\n      separators.mod = data.separators[1] || '--';\n      separators.val = data.separators[2] || '-';\n    }\n\n    if ('ignoreValues' in data) {\n      ignoreValues = !!data.ignoreValues;\n    }\n\n    if (data.modCase) {\n      if (!~['kebab', 'camel', 'snake'].indexOf(data.modCase)) {\n        throw 'Wrong mod case. You can use only these cases: kebab, snake, camel';\n      }\n\n      modCase = data.modCase;\n    }\n\n    return BemModule;\n  }\n}\n"],"names":[],"mappings":"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"}
